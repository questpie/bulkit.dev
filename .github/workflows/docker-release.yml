name: Docker Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get_version.outputs.version }}
    strategy:
      matrix:
        include:
          - name: api
            dockerfile: docker/api.Dockerfile
            image: questpie/bulkitdev-api
          - name: worker
            dockerfile: docker/worker.Dockerfile
            image: questpie/bulkitdev-worker
          - name: app
            dockerfile: docker/app.Dockerfile
            image: questpie/bulkitdev-app
    steps:
      - name: Get version from tag
        id: get_version
        run: echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Should tag as latest
        id: tag_latest
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "tag=true" >> $GITHUB_OUTPUT
          else
            echo "tag=false" >> $GITHUB_OUTPUT
          fi

      - name: Generate Docker Tags
        id: docker_tags
        run: |
          TAGS="${{ matrix.image }}:${{ steps.get_version.outputs.version }}"
          if [[ "${{ steps.tag_latest.outputs.tag }}" == "true" ]]; then
            TAGS="$TAGS,${{ matrix.image }}:latest"
          fi
          echo "tags=$TAGS" >> $GITHUB_OUTPUT

      - name: Build and Push Docker Images
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          push: true
          tags: ${{ steps.docker_tags.outputs.tags }}

      - name: Update GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.get_version.outputs.version }}
          body: |
            Docker Images:
            - API: `questpie/bulkitdev-api:${{ steps.get_version.outputs.version }}`
            - Worker: `questpie/bulkitdev-worker:${{ steps.get_version.outputs.version }}`
            - App: `questpie/bulkitdev-app:${{ steps.get_version.outputs.version }}`
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}